var store = [{
        "title": "AWS 아키텍처 설계 검토",
        "excerpt":"프롬프트:  {서비스유형} 기반 AWS 아키텍처를 검토해주세요.   분석 요청 사항:      인프라 구성            VPC 설계 검토       서브넷 구성       가용성 영역 활용       네트워크 토폴로지           보안 설정            IAM 정책 검토       보안 그룹 구성       암호화 적용 상태       접근 제어 전략           확장성/가용성            오토스케일링 설정       로드밸런싱 구성       장애 복구 전략       백업 정책           비용 최적화            리소스 사이징       예약 인스턴스 활용       스팟 인스턴스 검토       비용 모니터링           운영 관리            모니터링 체계       로깅 전략       알림 설정       배포 자동화           설계 문서 가이드:     아키텍처 다이어그램   인프라 코드 (IaC)   보안 정책 문서   운영 가이드   기대 산출물:     아키텍처 개선안   보안 강화 방안   비용 최적화 전략   운영 효율화 제안   💡 AWS 아키텍처는 보안, 확장성, 비용을 균형있게 고려해야 합니다.  ","categories": ["DevOps"],
        "tags": ["EC2","S3","Lambda","CloudFormation","보안"],
        "url": "/prompts/chatgpt/aws-architecture-review/",
        "teaser": "/assets/images/default-teaser.jpg"
      },{
        "title": "CI/CD 파이프라인 검증",
        "excerpt":"프롬프트:  {환경} 환경의 {도구} 기반 CI/CD 파이프라인을 검증해주세요.   분석 요청 사항:      파이프라인 구조            단계 구성 검토       작업 순서 최적화       병렬화 가능성       의존성 관리           테스트 자동화            단위 테스트 통합       통합 테스트 구성       E2E 테스트 전략       코드 품질 검사           배포 전략            무중단 배포 구성       롤백 메커니즘       환경 분리       설정 관리           보안 검증            시크릿 관리       취약점 스캔       접근 권한 설정       감사 로그           모니터링/알림            파이프라인 모니터링       실패 알림 설정       성능 메트릭스       로그 관리           설정 파일 가이드:     CI/CD 설정 파일   테스트 구성   배포 스크립트   환경 설정   기대 산출물:     파이프라인 최적화 방안   자동화 개선점   보안 강화 제안   모니터링 체계 개선   💡 CI/CD는 안정성과 속도를 균형있게 고려해야 합니다.  ","categories": ["DevOps"],
        "tags": ["GitHub Actions","Jenkins","Docker","Kubernetes","자동화"],
        "url": "/prompts/chatgpt/cicd-pipeline-review/",
        "teaser": "/assets/images/default-teaser.jpg"
      },{
        "title": "전문적인 코드 리뷰 프롬프트",
        "excerpt":"당신은 {language} 전문가이자 시니어 개발자입니다. 다음 코드를 {focus_areas}에 중점을 두고 전문적으로 리뷰해주세요:      코드 품질 평가            클린 코드 원칙 준수 여부       네이밍 컨벤션       코드 구조와 모듈화           주요 개선 사항            성능 최적화 제안       잠재적 버그 및 취약점       더 나은 구현 방법 제시           긍정적인 피드백            잘 작성된 부분 강조       효과적인 패턴 사용 언급           실용적인 리팩토링 제안            구체적인 코드 예시 포함       단계별 개선 방법 제시           코드를 붙여넣은 후, 위 형식에 따라 상세한 리뷰를 제공해주세요.  ","categories": ["chatgpt"],
        "tags": ["코드리뷰","개발","ChatGPT"],
        "url": "/prompts/chatgpt/code-review/",
        "teaser": "/assets/images/default-teaser.jpg"
      },{
        "title": "데이터베이스 쿼리 최적화",
        "excerpt":"프롬프트:  {DB유형} 데이터베이스의 쿼리 성능을 최적화해주세요.   분석 요청 사항:      쿼리 실행 계획            EXPLAIN 분석       인덱스 사용 현황       테이블 스캔 패턴       조인 최적화 상태           인덱싱 전략            인덱스 설계 검토       복합 인덱스 구성       인덱스 크기 분석       인덱스 유지보수 계획           성능 병목            느린 쿼리 로그 분석       메모리 사용량       디스크 I/O 패턴       동시성 처리 상태           데이터 모델링            정규화 수준 평가       파티셔닝 전략       샤딩 필요성 검토       데이터 분산 상태           운영 최적화            백업/복구 전략       모니터링 설정       유지보수 계획       스케일링 전략           코드 첨부 가이드:     문제가 되는 쿼리문   테이블 스키마   현재 인덱스 정보   성능 측정 결과   기대 산출물:     쿼리 최적화 제안   인덱스 재구성 계획   성능 개선 로드맵   모니터링 체크리스트   💡 성능 최적화는 비용과 효과를 균형있게 고려하여 진행합니다.  ","categories": ["백엔드"],
        "tags": ["MySQL","MongoDB","PostgreSQL","성능최적화","인덱싱"],
        "url": "/prompts/chatgpt/database-query-optimization/",
        "teaser": "/assets/images/default-teaser.jpg"
      },{
        "title": "E2E 테스트 시나리오 개발",
        "excerpt":"프롬프트:  {테스트범위}에 대한 {도구} 기반 E2E 테스트 시나리오를 작성해주세요.   분석 요청 사항:      테스트 시나리오            핵심 사용자 플로우       예외 케이스       크로스 브라우징       성능 측정           테스트 구조화            페이지 객체 모델       커스텀 커맨드       테스트 유틸리티       데이터 관리           안정성 확보            대기 전략       재시도 메커니즘       에러 처리       병렬 실행           시각적 테스트            스크린샷 비교       반응형 테스트       시각적 회귀       접근성 검증           CI/CD 통합            파이프라인 구성       환경 설정       결과 보고       알림 설정           코드 첨부 가이드:     애플리케이션 URL   테스트 환경 정보   현재 테스트 (있는 경우)   알려진 이슈   기대 산출물:     테스트 시나리오   설정 가이드   실행 결과 분석   개선 제안   💡 E2E 테스트는 실제 사용자 경험을 최대한 반영해야 합니다.  ","categories": ["테스팅"],
        "tags": ["Cypress","Playwright","자동화테스트","UI테스트","회귀테스트"],
        "url": "/prompts/chatgpt/e2e-test-scenario/",
        "teaser": "/assets/images/default-teaser.jpg"
      },{
        "title": "전문적인 프론트엔드 코드 리뷰",
        "excerpt":"프롬프트:  {프레임워크} 컴포넌트 구조에 대한 전문적인 리뷰를 요청드립니다.   분석 요청 사항:      상태 관리 아키텍처            {상태관리도구} 스토어 구조 평가       상태 정규화 수준 검토       비동기 액션 처리 패턴 분석           성능 최적화            불필요한 리렌더링 발생 여부       메모이제이션 사용 적절성       코드 스플리팅 적용 상태       이미지/폰트 최적화 현황           컴포넌트 설계            컴포넌트 책임 분리 적절성       Props 인터페이스 설계       재사용성과 확장성 평가       커스텀 훅 활용도           웹 표준/접근성            ARIA 레이블 적용 상태       키보드 인터랙션 지원       시맨틱 마크업 사용       색상 대비율 준수           크로스 브라우징            {타겟브라우저} 호환성 이슈       폴리필 적용 현황       CSS 벤더 프리픽스 관리           코드 첨부 가이드:     핵심 컴포넌트 코드   상태 관리 설정 파일   성능 측정 결과 (있는 경우)   패키지 의존성 목록   기대 산출물:     주요 개선 필요 사항 (우선순위별)   리팩토링 제안 코드 스니펫   성능 최적화 체크리스트   참고할만한 베스트 프랙티스 예시   💡 코드 리뷰는 비판이 아닌 개선을 위한 건설적인 제안에 초점을 맞춥니다.  ","categories": ["웹 개발"],
        "tags": ["React","Vue","성능최적화","코드리뷰","아키텍처"],
        "url": "/prompts/chatgpt/frontend-code-review/",
        "teaser": "/assets/images/default-teaser.jpg"
      },{
        "title": "HTML/CSS 구조 검증",
        "excerpt":"프롬프트:  {레이아웃 유형} 기반의 HTML/CSS 구조를 검증해주세요.   분석 요청 사항:      HTML 구조 검증            HTML5 시맨틱 요소 사용 적절성       W3C 마크업 유효성 검사       접근성 트리 구조 분석       메타데이터 완성도           반응형 디자인            모바일 퍼스트 접근 확인       {브레이크포인트} 기준 레이아웃 동작       이미지/미디어 반응형 처리       유동적 타이포그래피 적용           CSS 아키텍처            선택자 특이성 관리       CSS 변수 활용도       재사용 가능한 유틸리티 클래스       네이밍 컨벤션 일관성           성능 최적화            중복 스타일 정의       미디어 쿼리 최적화       CSS 번들 크기       애니메이션 성능           크로스 브라우징            {지원브라우저} 호환성 검증       폴백 스타일 구현       프리픽스 사용 현황           코드 첨부 가이드:     HTML 마크업   CSS 스타일시트   반응형 동작 스크린샷   성능 측정 결과 (옵션)   기대 산출물:     마크업 개선 제안   CSS 리팩토링 포인트   반응형 최적화 체크리스트   브라우저 호환성 보장 방안   💡 검증 결과는 웹 표준과 접근성 지침을 기준으로 제시됩니다.  ","categories": ["프론트엔드"],
        "tags": ["접근성","반응형","HTML","CSS","웹표준"],
        "url": "/prompts/chatgpt/html-css-review/",
        "teaser": "/assets/images/default-teaser.jpg"
      },{
        "title": "머신러닝 모델 검증",
        "excerpt":"프롬프트:  {모델유형} 모델의 성능과 구조를 검증해주세요.   분석 요청 사항:      모델 아키텍처            레이어 구성 검토       하이퍼파라미터 설정       활성화 함수 선택       정규화 기법 적용           학습 프로세스            손실 함수 분석       옵티마이저 설정       학습률 스케줄링       배치 크기 최적화           성능 평가            평가 메트릭스 분석       과적합/과소적합 진단       교차 검증 결과       에러 분석           데이터 파이프라인            전처리 과정 검토       증강 기법 적용       클래스 불균형 처리       데이터 품질 검증           모델 해석            특성 중요도 분석       예측 설명 가능성       편향성 검토       모델 신뢰성 평가           코드 첨부 가이드:     모델 아키텍처 코드   학습 스크립트   성능 평가 결과   학습 곡선 그래프   기대 산출물:     모델 개선 제안   하이퍼파라미터 최적화 방안   성능 향상 로드맵   운영 배포 체크리스트   💡 모델 검증은 성능과 해석 가능성을 균형있게 고려합니다.  ","categories": ["데이터 사이언스"],
        "tags": ["PyTorch","TensorFlow","딥러닝","모델최적화","XAI"],
        "url": "/prompts/chatgpt/ml-model-review/",
        "teaser": "/assets/images/default-teaser.jpg"
      },{
        "title": "Node.js API 설계 검토",
        "excerpt":"프롬프트:  {프레임워크} 기반 {API유형} API 설계를 검토해주세요.   분석 요청 사항:      API 아키텍처            엔드포인트 구조화 방식       미들웨어 체인 구성       컨트롤러/서비스 계층 분리       의존성 주입 패턴           보안 설정            {인증방식} 구현 상태       CORS 정책 설정       Rate Limiting 적용       보안 헤더 구성           에러 처리            글로벌 에러 핸들링       HTTP 상태 코드 사용       에러 응답 포맷       로깅 전략           성능 최적화            캐싱 전략       데이터베이스 쿼리 최적화       비동기 처리 패턴       메모리 관리           API 문서화            OpenAPI/Swagger 설정       API 버저닝 전략       스키마 유효성 검사       응답 예시 제공           코드 첨부 가이드:     주요 라우터/컨트롤러 코드   미들웨어 설정   보안 설정 파일   API 문서 (있는 경우)   기대 산출물:     아키텍처 개선점   보안 강화 방안   성능 최적화 제안   코드 품질 개선 가이드   💡 API 설계는 확장성, 보안성, 유지보수성을 균형있게 고려합니다.  ","categories": ["백엔드"],
        "tags": ["NestJS","Express","REST API","GraphQL","아키텍처"],
        "url": "/prompts/chatgpt/nodejs-api-review/",
        "teaser": "/assets/images/default-teaser.jpg"
      },{
        "title": "UI 디자인 시스템 검증",
        "excerpt":"프롬프트:  {디자인툴} 기반 디자인 시스템을 검증해주세요.   분석 요청 사항:      디자인 토큰            색상 시스템 검토       타이포그래피 스케일       스페이싱/그리드 시스템       아이콘/이미지 가이드라인           컴포넌트 라이브러리            컴포넌트 계층 구조       변형 관리 방식       네이밍 컨벤션       재사용성 수준           접근성 검증            색상 대비율       포커스 상태       터치 타겟 크기       대체 텍스트 가이드           반응형 대응            브레이크포인트 전략       컴포넌트 동작 방식       레이아웃 그리드       타이포그래피 스케일링           문서화/개발 연계            디자인 가이드라인       컴포넌트 명세       개발 핸드오프 프로세스       버전 관리 전략           첨부 자료 가이드:     디자인 시스템 파일   스타일 가이드   컴포넌트 라이브러리   프로토타입 (있는 경우)   기대 산출물:     디자인 시스템 개선점   컴포넌트 최적화 방안   접근성 개선 체크리스트   문서화 보완 사항   💡 디자인 시스템은 일관성, 효율성, 확장성을 모두 고려해야 합니다.  ","categories": ["디자인"],
        "tags": ["Figma","Storybook","디자인시스템","컴포넌트","접근성"],
        "url": "/prompts/chatgpt/ui-design-system-review/",
        "teaser": "/assets/images/default-teaser.jpg"
      },{
        "title": "단위 테스트 케이스 생성",
        "excerpt":"프롬프트:  {테스트대상}에 대한 {프레임워크} 기반 단위 테스트를 작성해주세요.   분석 요청 사항:      테스트 범위            핵심 기능 식별       경계 조건 정의       예외 케이스 도출       의존성 파악           테스트 설계            테스트 구조화       설정/해체 전략       목 객체 설계       테스트 격리           테스트 구현            테스트 케이스 작성       어설션 설계       비동기 처리       테스트 가독성           커버리지 분석            라인 커버리지       분기 커버리지       함수 커버리지       복잡도 분석           유지보수성            테스트 문서화       중복 제거       테스트 유틸리티       리팩토링 용이성           코드 첨부 가이드:     테스트 대상 코드   의존성 정보   현재 테스트 (있는 경우)   커버리지 리포트   기대 산출물:     테스트 스위트   테스트 유틸리티   커버리지 분석   리팩토링 제안   💡 좋은 단위 테스트는 신뢰성과 유지보수성을 모두 고려합니다.  ","categories": ["테스팅"],
        "tags": ["Jest","TDD","테스트자동화","코드품질","테스트커버리지"],
        "url": "/prompts/chatgpt/unit-test-generation/",
        "teaser": "/assets/images/default-teaser.jpg"
      },{
        "title": "현대적인 제품 디자인 생성 프롬프트",
        "excerpt":"{product_type}의 혁신적인 {style} 디자인을 생성해주세요. 다음 요소들을 포함해주세요:   세부 스펙:     초고해상도 제품 렌더링   {color_scheme} 색상 팔레트 적용   스튜디오 조명 설정   45도 각도의 3/4 뷰   부드러운 그림자와 반사   디테일한 재질 표현   스타일 가이드:     현대적이고 미래지향적인 디자인   인체공학적 곡선 활용   프리미엄 감성의 마감처리   심플하면서도 독특한 디자인 요소   브랜드 아이덴티티 반영 가능한 디테일   배경 설정:     깨끗한 흰색 또는 그라데이션 배경   제품에 초점을 맞춘 구도   전문적인 제품 사진 스타일   추가 요청사항:     실제 제작 가능한 현실적인 디자인   사용자 인터페이스 요소 포함   브랜딩 요소를 위한 여백 확보  ","categories": ["dalle"],
        "tags": ["제품디자인","DALL-E","산업디자인"],
        "url": "/prompts/dalle/product-design/",
        "teaser": "/assets/images/default-teaser.jpg"
      },{
        "title": "스타일라이즈드 캐릭터 디자인 프롬프트",
        "excerpt":"/imagine prompt: {character_type}, {art_style} style, {mood} atmosphere, character design, full body shot, dynamic pose, intricate details, professional lighting, high-quality rendering –ar 2:3 –v 5.2 –q 2 –s 750   세부 설정:   캐릭터 특징:     독특한 실루엣과 포즈   개성 있는 의상 디자인   감정이 드러나는 표정   캐릭터성이 돋보이는 소품   아트 디렉션:     선명한 색감과 대비   깊이감 있는 구도   캐릭터 중심의 구성   분위기를 살리는 이펙트   기술적 요소:     고해상도 렌더링   자연스러운 빛과 그림자   디테일한 텍스처   매력적인 컬러 팔레트   추가 파라미터:     –ar 2:3: 세로형 구도   –v 5.2: 최신 버전 사용   –q 2: 고품질 설정   –s 750: 스타일화 강도 조절   참고: 프롬프트 앞에 /imagine prompt: 를 반드시 포함해야 합니다.  ","categories": ["midjourney"],
        "tags": ["캐릭터디자인","Midjourney","일러스트레이션"],
        "url": "/prompts/midjourney/character-design/",
        "teaser": "/assets/images/default-teaser.jpg"
      }]
